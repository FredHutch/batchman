#!/usr/bin/env ansible-playbook

- hosts: localhost
  become: no
  gather_facts: no

  vars:
    AWS_PROFILE: "saml"
    APPNAME: "batchman"
    DOKKU_HOST: "dokku-stack-dev"
    STACK_NAME: "app-batchman-stack"
    PGUSER: "batchmandb"
    PGDATABASE: "batchmandb"
    PGPASSWORD: "batchmandb"
    CLOUDFORMATION_PARAMS:
      DBName: "{{ PGDATABASE }}"
      DBUsername: "{{ PGUSER }}"
      DBPassword: "{{ PGPASSWORD }}"
      DBSecurityGroup: "sg-0c46c5616bf07cbf6"
      DBSubnetGroupName: "dokku-stack-dev-dbsubnetgroup-uongqr3nw529"

  tasks:
    - name: generate cloudformation json from troposphere file
      shell: "python aws-infra/{{STACK_NAME}}.template.py > ./{{STACK_NAME}}.generated.json"
      tags: generate-json
    - name: upload cloudformation template to s3
      aws_s3:
        src: "./{{STACK_NAME}}.generated.json"
        object: "{{STACK_NAME}}.generated.json"
        bucket: "uwlm-aws-admin-cf-templates"
        mode: "put"
    - name: deploy the cloudformation template for this stack
      cloudformation:
        profile: "{{ AWS_PROFILE }}"
        stack_name: "{{ STACK_NAME }}"
        state: "present"
        region: "us-west-2"
        create_changeset: true
        template_url: "https://s3.amazonaws.com/uwlm-aws-admin-cf-templates/{{STACK_NAME}}.generated.json"
        template_parameters: "{{ CLOUDFORMATION_PARAMS }}"
      register: stack
    # rds endpoint in stack.stack_outputs['RDSEndpoint']

    - name: define RDS URL on dokku
      block:
        - name: call get_stack_output
          delegate_to: localhost
          become: false
          get_stack_output:
            stack_name: "{{ STACK_NAME }}"
        - name: define DATABASE_URL
          set_fact:
            DATABASE_URL: "postgres://{{ PGUSER }}:{{ PGPASSWORD }}@{{ STACK_OUTPUT['RDSEndpoint'] }}:5432/{{ PGDATABASE }}"
        - name: set environment variables on dokku host
          delegate_to: "{{ DOKKU_HOST }}"
          become_user: dokku
          command: "dokku config:set --encoded --no-restart {{ APPNAME }} {{ item }}"
          with_items:
            - "DATABASE_URL='{{ DATABASE_URL | b64encode }}'"
      tags:
        - env-vars



